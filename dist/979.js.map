{"version":3,"file":"979.js","mappings":"gOAIA,MAAMA,EAAY,uCAgBZC,EAAa,KACf,MAAMC,GAASC,EAAAA,EAAAA,MACTC,EAAgBC,OAAOH,EAAOI,KAC7BC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAuB,KAClDC,EAAcC,IAAmBF,EAAAA,EAAAA,UAA0B,KAElEG,EAAAA,EAAAA,YAAU,KACNC,GAAS,GACT,KACJD,EAAAA,EAAAA,YAAU,KACNE,GAAe,GAChB,IAEH,MAAMD,EAAUE,UAChB,IACI,MAAMC,QAAiBC,IAAAA,IAAW,GAAEjB,WAC9BkB,QAAoBF,GAAUG,MACpCX,EAAaU,EAIZ,CAFH,MAAME,GACJC,QAAQC,IAAI,WAAYF,EACvB,GAEEN,EAAgBC,UACvB,IACI,MAAMC,QAAiBC,IAAAA,IAAW,GAAEjB,cAC9BuB,QAAsBP,GAAUG,MACtCR,EAAgBY,EAIf,CAFH,MAAMH,GACJC,QAAQC,IAAI,WAAYF,EACvB,GAGCI,EAAYjB,EAAUkB,QAAQC,GAC5BtB,IAAWsB,GAAKpB,KAGlBqB,EAAWjB,EAAae,QAAQC,GAC9BtB,IAAWsB,GAAKE,SAGxB,OACI,gBAACC,EAAD,KACI,gBAACC,EAAD,KACKN,GAAWO,KAAKL,GACb,gBAACM,EAAD,CAAUC,IAAKP,GAAKpB,IAChB,gBAAC4B,EAAD,KACI,gBAACC,EAAD,KAAaT,GAAKU,OAClB,gBAACC,EAAD,KACI,gBAACC,EAAD,aAAiBZ,GAAKa,QACtB,gBAACC,EAAD,WAAiBb,GAAUc,OAA3B,QAGJ,gBAACC,EAAD,KAAYhB,GAAKiB,SAG5BhB,GAAUI,KAAKL,GACZ,gBAACkB,EAAD,CAAaX,IAAKP,GAAKpB,IACnB,gBAACuC,EAAD,KAAenB,GAAKoB,MACpB,gBAACC,EAAD,KAAerB,GAAKiB,UAlBxC,EA0BJ,EAAeK,EAAAA,KAAW/C,GAEpB4B,EAAYoB,EAAAA,GAAAA,GAAW,GAEvBnB,EAAemB,EAAAA,GAAAA,GAAW;;;;;;EAQ1BjB,EAAWiB,EAAAA,GAAAA,GAAW;;;;;EAOtBf,EAAee,EAAAA,GAAAA,GAAW;;;;;EAO1Bd,EAAac,EAAAA,GAAAA,GAAW;;;;;;;EASxBZ,EAAgBY,EAAAA,GAAAA,GAAW;;;;EAM3BX,EAAYW,EAAAA,GAAAA,GAAW;;;;;;EAQvBT,EAAcS,EAAAA,GAAAA,GAAW;;;;;;;EAUzBP,EAAYO,EAAAA,GAAAA,GAAW;;;;;;;EASvBL,EAAcK,EAAAA,GAAAA,GAAW;;;;;;;EASzBJ,EAAeI,EAAAA,GAAAA,GAAW;;;;;;EAQ1BF,EAAeE,EAAAA,GAAAA,GAAW","sources":["webpack://codestates-fe-advanced-course/./src/Routes/DetailPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport styled from \"styled-components\"\nimport { useParams } from 'react-router-dom';\nconst BASE_PATH = \"https://jsonplaceholder.typicode.com\";\n\ninterface IpostsData {\n    userId: number;\n    id: number;\n    title : string;\n    body : string;\n}\n\ninterface IcommentsData {\n    postId: number;\n    id: number;\n    name: string;\n    email: string;\n    body: string;\n}\nconst DetailPage = () => {\n    const idData = useParams()\n    const ItemId:number = Number(idData.id)\n    const [postsData, setPostsData] = useState<IpostsData[]>([]);\n    const [commentsData, setCommentsData] = useState<IcommentsData[]>([]);    \n    \n    useEffect(() => {    \n        getData()\n    } , [])\n    useEffect(() => {\n        getDetailData()\n    }, [])\n\n    const getData = async () => {\n    try {\n        const response = await axios.get(`${BASE_PATH}/posts`)\n        const resMainData = await response?.data;\n        setPostsData(resMainData);\n       \n    } catch(err) {\n        console.log(\"Error >>\", err);\n        }\n    }\n     const getDetailData = async () => {\n    try {\n        const response = await axios.get(`${BASE_PATH}/comments`)\n        const resDetailData = await response?.data;\n        setCommentsData(resDetailData);\n       \n    } catch(err) {\n        console.log(\"Error >>\", err);\n        }\n    }\n    \n    const postsBody = postsData.filter((ele) => (\n            ItemId === ele?.id               \n        ))\n        \n    const comments = commentsData.filter((ele) => (\n            ItemId === ele?.postId               \n        ))\n    \n    return (\n        <Container>\n            <SubContainer>\n                {postsBody?.map((ele) => (\n                    <PostsBox key={ele?.id}>\n                        <TitleNameBox>            \n                            <PostsTitle>{ele?.title}</PostsTitle>\n                            <NameLengthBox>\n                                <PostsName> 사용자 {ele?.userId}</PostsName>\n                                <PostsLength>댓글 {comments?.length} 개</PostsLength>\n                            </NameLengthBox>\n                        </TitleNameBox>\n                            <PostsBody>{ele?.body}</PostsBody>\n                    </PostsBox>\n                ))}\n                {comments?.map((ele) => (\n                    <CommentsBox key={ele?.id}>\n                        <CommentsName>{ele?.name}</CommentsName>\n                        <CommentsBody>{ele?.body}</CommentsBody>\n                    </CommentsBox>\n                ))}\n            </SubContainer>\n        </Container>\n    )\n}\n\nexport default React.memo(DetailPage);\n\nconst Container = styled.div``;\n\nconst SubContainer = styled.div`\nmargin: 50px;\npadding: 10px;\nbackground-color: rgba(225, 225, 225, 0.2);\nborder-radius: 15px;\nbox-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);  \n`;\n\nconst PostsBox = styled.div`\nmargin: 10px;\nbackground-color: #004c8c;\nborder-radius: 15px;\nbox-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);  \n`;\n\nconst TitleNameBox = styled.div`\n/* border: 1px solid black; */\nmargin: 10px;\ndisplay: flex;\njustify-content: space-between;\n`;\n\nconst PostsTitle = styled.div`\n/* border: 1px solid black; */\nmargin: 10px;\nfont-weight: bolder;\nfont-size: 30px;\ncolor:#eceff1;\n/* color: white; */\n`;\n\nconst NameLengthBox = styled.div`\n/* border: 1px solid black; */\ndisplay: flex;\nmargin: 15px;\n`;\n\nconst PostsName = styled.div`\n/* border: 1px solid black; */\nmargin: 5px;\nfont-size: 15px;\nfont-weight: bolder;\ncolor: white;\n`;\n\nconst PostsLength = styled.div`\n/* border: 1px solid black; */\nmargin: 5px;\nfont-size: 15px;\nfont-weight: bolder;\ncolor: white;\n\n`;\n\n\nconst PostsBody = styled.div`\n/* border: 1px solid black; */\nfont-size: 22px;\ncolor: #eceff1;\n/* font-weight: bolder; */\nmargin: 20px;\npadding-bottom: 10px;\n`;\n\nconst CommentsBox = styled.div`\n/* border: 1px solid black; */\nmargin: 20px;\npadding: 5px;\nbackground-color: rgba(225, 225, 225, 0.2);\nborder-radius: 15px;\nbox-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06); \n`;\n\nconst CommentsName = styled.div`\n/* border: 1px solid black; */\nmargin: 10px;\nfont-weight: bolder;\nfont-size: 20px;\ncolor: #102027;\n`;\n\nconst CommentsBody = styled.div`\n/* border: 1px soild black; */\nmargin: 10px;\nfont-size: 18px;\n`;\n"],"names":["BASE_PATH","DetailPage","idData","useParams","ItemId","Number","id","postsData","setPostsData","useState","commentsData","setCommentsData","useEffect","getData","getDetailData","async","response","axios","resMainData","data","err","console","log","resDetailData","postsBody","filter","ele","comments","postId","Container","SubContainer","map","PostsBox","key","TitleNameBox","PostsTitle","title","NameLengthBox","PostsName","userId","PostsLength","length","PostsBody","body","CommentsBox","CommentsName","name","CommentsBody","React","styled"],"sourceRoot":""}